name: Rust

on:
  release:
    types: [created]
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-upload-linux:

    runs-on: ubuntu-latest
    if: startsWith(github.event.release.tag_name, 'v')

    steps:
    - name: Checkout to the latest version 
      uses: actions/checkout@v4

    - name: Build
      run: cargo build --release --verbose
      
    - name: Test
      run: cargo test --all
    
    - name: Install cargo deb
      run: cargo install cargo-deb

    - name: Build .deb package
      run: cargo deb

    - name: Install cargo generate rpm
      run: cargo install cargo-generate-rpm --version 0.14.1

    - name: Build .rpm package
      run: cargo generate-rpm
    
    - name: Upload artifacts to release
      uses: AButler/upload-release-assets@v3.0
      with:
        files: "./target/release/tw;./target/debian/*.deb;./target/generate-rpm/*.rpm"
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish to crates.io
      run: cargo publish --token ${{ secrets.CRATES_TOKEN }}

  build-and-upload-windows:

    if: startsWith(github.event.release.tag_name, 'v')
    strategy:
      matrix:
        os: [windows-latest]
        target: [i686-pc-windows-msvc, x86_64-pc-windows-msvc]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout to the latest version 
      uses: actions/checkout@v4

    - name: Install Rust (nightly)
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
        target: ${{ matrix.target }}

    - name: Build
      run: cargo build --release --verbose --target ${{ matrix.target }}

    - name: Test
      run: cargo test --all

    - name: Upload artifacts to release
      uses: actions/upload-artifact@v4
      with:
        name: tw-${{matrix.os}}-${{matrix.target}}.exe
        path: target/${{ matrix.target }}/release/tw.exe

  build-and-upload-macos:

    if: startsWith(github.event.release.tag_name, 'v')
    strategy:
      matrix:
        os: [macos-latest]
        target: [x86_64-apple-darwin, aarch64-apple-darwin]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout to the latest version 
      uses: actions/checkout@v4

    - name: Install Rust (nightly)
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
        target: ${{ matrix.target }}

    - name: Build
      run: cargo build --release --verbose --target ${{ matrix.target }}

    - name: Test
      run: cargo test --all

    - name: Upload artifacts to release
      uses: actions/upload-artifact@v4
      with:
        name: tw-${{matrix.os}}-${{matrix.target}}
        path: target/${{ matrix.target }}/release/tw